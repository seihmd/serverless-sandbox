service: register-fcm-token-service

frameworkVersion: '>=1.28.0 <2.0.0'

plugins:
  - serverless-localstack

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-1'}
  deploymentBucket:
    name: ${self:service}-${opt:stage}-deployment-bucket

custom:
  localstack:
    debug: true
    stages:
      - local
    host: http://localhost
    autostart: true
    endpoints:
      S3: http://localhost:4572
      DynamoDB: http://localhost:4569
      CloudFormation: http://localhost:4581
      Elasticsearch: http://localhost:4571
      ES: http://localhost:4578
      SNS: http://localhost:4575
      SQS: http://localhost:4576
      SSM: http://localhost:4583
      Lambda: http://localhost:4574
      Kinesis: http://localhost:4568

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  registerFcmTokens:
    handler: bin/registerFcmTokens
    events:
      - http:
          path: fcm-tokens
          method: POST
    environment:
      ENV_STAGE: ${self:provider.stage}
      ENV_SNS_ARN: arn:aws:sns:ap-northeast-1:000000000000:app/GCM/fcm_sns
      ENV_DYNAMO_TABLE: FcmTable #${ssm:/fcm/${self:provider.stage}/dynamodb/table/name}
#      ENV_SNS_ARN: ${self:custom.sns_arn.${self:provider.stage}, ${ssm:/fcm/${self:provider.stage}/sns/arn} }
#      ENV_DYNAMO_TABLE: ${self:custom.dynamodb_table_name.${self:provider.stage}, ${ssm:/fcm/${self:provider.stage}/dynamodb/table/name} }
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
