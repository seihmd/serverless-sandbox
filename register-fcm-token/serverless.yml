service: register-fcm-token-service

frameworkVersion: '>=1.28.0 <2.0.0'

plugins:
  - serverless-localstack

provider:
  name: aws
  runtime: go1.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-northeast-1'}
  profile: default
  deploymentBucket: ${opt:bucket}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource: { 'Fn::Join': [':', ['arn:aws:ssm', { Ref: 'AWS::Region' }, { Ref: 'AWS::AccountId' }, 'parameter/fcm/${self:provider.stage}/*']] }
    - Effect: Allow
      Action:
        - sns:CreatePlatformEndpoint
      Resource: ${ssm:/fcm/${self:provider.stage}/sns/arn}
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: ${ssm:/fcm/${self:provider.stage}/dynamodb/table/arn}
custom:
  localstack:
    debug: true
    stages:
      - local
    host: http://localhost
    autostart: true
    endpoints:
      S3: http://localhost:4572
      DynamoDB: http://localhost:4569
      CloudFormation: http://localhost:4581
      Elasticsearch: http://localhost:4571
      ES: http://localhost:4578
      SNS: http://localhost:4575
      SQS: http://localhost:4576
      SSM: http://localhost:4583
      Lambda: http://localhost:4574
      Kinesis: http://localhost:4568
  sns_arn:
    local: arn:aws:sns:ap-northeast-1:000000000000:app/GCM/fcm_sns
  dynamodb_table_name:
    local: FcmTable

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  registerFcmTokens:
    handler: bin/registerFcmTokens
    #    iamRoleStatementsInherit: true
    events:
      - http:
          path: fcm-tokens
          method: POST
    environment:
      ENV_STAGE: ${self:provider.stage}
